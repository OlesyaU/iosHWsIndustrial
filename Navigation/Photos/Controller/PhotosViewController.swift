//
//  PhotosViewController.swift
//  Navigation
//
//  Created by –û–ª–µ—Å—è on 16.04.2022.
//

import UIKit
import iOSIntPackage

class PhotosViewController: UIViewController {
    
    private var photos = Photo.getPhotos()
    private var photos2 = Photo.getDoudlePhotos()
    private let constraint: CGFloat = 8
    private let processor = ImageProcessor()
    private var testErrorPhotos = [UIImage]()
    
    
    private lazy var collection: UICollectionView =  {
        let layout = UICollectionViewFlowLayout()
        let collection = UICollectionView(frame: .zero, collectionViewLayout: layout)
        collection.translatesAutoresizingMaskIntoConstraints = false
        collection.dataSource = self
        collection.delegate = self
        collection.register(PhotosCollectionViewCell.self, forCellWithReuseIdentifier: PhotosCollectionViewCell.identifier)
        return collection
    }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationController?.navigationBar.isHidden = false
        title = "Photo Gallery"
        navigationController?.navigationBar.topItem?.backButtonTitle = "Back"
        layout()
        //                errorsHandle()
        //        filteringImage(images: photos)
        filteringImage(images: testErrorPhotos)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.navigationBar.isHidden = false
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        navigationController?.navigationBar.isHidden = true
    }
    
    private func layout(){
        view.addSubview(collection)
        NSLayoutConstraint.activate([
            collection.topAnchor.constraint(equalTo: view.topAnchor),
            collection.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            collection.bottomAnchor.constraint(equalTo: view.bottomAnchor),
            collection.leadingAnchor.constraint(equalTo: view.leadingAnchor)
        ])
    }
}
// MARK: - UICollectionViewDataSource
extension PhotosViewController: UICollectionViewDataSource {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        //        photos.count
        //        photos2.count
        testErrorPhotos.count
        //        –≤ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–∞–¥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π(–ø—É—Å—Ç–æ–π) –º–∞—Å—Å–∏–≤
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: PhotosCollectionViewCell.identifier, for: indexPath) as? PhotosCollectionViewCell else {return UICollectionViewCell()}
        //        –≤ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–∞–¥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π(–ø—É—Å—Ç–æ–π) –º–∞—Å—Å–∏–≤
        //        let photo = photos[indexPath.item]
        //        let photo = photos2[indexPath.item]
        let photo = testErrorPhotos[indexPath.item]
        cell.configure(photo: photo)
        return cell
    }
}

//MARK: - UICollectionViewDelegateFlowLayout
extension PhotosViewController: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let width = (collectionView.bounds.width - constraint * 4)/3
        return CGSize(width: width, height: width)
    }
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        return UIEdgeInsets(top: constraint, left: constraint, bottom: constraint, right: constraint)
    }
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        constraint
    }
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        constraint
    }
}

extension PhotosViewController {
    //        –≤ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–∞–¥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π(–ø—É—Å—Ç–æ–π) –º–∞—Å—Å–∏–≤
    private func filteringImage(images: [UIImage]) -> Result<[UIImage],VCErrors> {
        let start = DispatchTime.now().uptimeNanoseconds
        if !images.isEmpty {
            processor.processImagesOnThread(sourceImages: images, filter: .sepia(intensity: 1.0), qos: .userInitiated, completion: { [weak self] images in
                self?.photos = images
                //                self?.photos2 = images
                //                self?.testErrorPhotos = images
                    .compactMap{$0}
                    .map{UIImage(cgImage: $0)}
                DispatchQueue.main.async {
                    [weak self] in
                    self?.collection.reloadData()
                    let end = DispatchTime.now().uptimeNanoseconds
                    let allTime = Int(end - start)/1000000000
                    print("–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ \(allTime) —Å–µ–∫—É–Ω–¥")
                }
            })
            return .success(images)
        } else {
            let aleart = UIAlertAction(title: "OK", style: .cancel)
            let act = UIAlertController(title: "OOOOPS", message: "Sorrryyyy...no data, pictures does not loaded", preferredStyle: .alert)
            act.addAction(aleart)
            present(act, animated: true)
            print("NO Data for show")
            return .failure(VCErrors.noData)
        }
    }
    
    private func errorsHandle() {
        do {
            try filteringImage(images: testErrorPhotos)
        }
        catch let error as VCErrors {
            switch error {
                case .noData:
                    let aleart = UIAlertAction(title: "OK", style: .cancel)
                    let act = UIAlertController(title: "OOOOPS", message: "Sorrryyyy...no data, pictures does not loaded", preferredStyle: .alert)
                    act.addAction(aleart)
                    present(act, animated: true)
                default:
                    print("default")
            }
        }
    }
}
//class PhotosViewController –æ—à–∏–±–∫–∞ —Ç—É—Ç- –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç–∏–Ω–æ–∫
// –Ω–∞–¥–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–ø–µ—Ä–µ—Å—Ç–∞–≤–ª—è—Ç—å –º–∞—Å—Å–∏–≤ –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ –≤ –º–µ—Ç–æ–¥ private func filteringImage(images: [UIImage])...–æ—Å—Ç–∞–≤–∏–ª–∞ –ø–µ—Ä–≤—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ —Ç–æ–∂–µ, —á—Ç–æ–±—ã –í—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω(–Ω–∞–¥–µ—é—Å—å —á—Ç–æ –¥–∞ ü§û)


// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç–∏–Ω–æ–∫:
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 9 —Å–µ–∫—É–Ω–¥ - sourceImages: photos, filter: .noir, qos: .userInteractive,
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 9 —Å–µ–∫—É–Ω–¥ - sourceImages: photos, filter: .noir, qos:  .userInitiated,
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 9 —Å–µ–∫—É–Ω–¥ - sourceImages: photos, filter: .noir, qos: .utility,
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 10 —Å–µ–∫—É–Ω–¥ - sourceImages: photos, filter: .noir, qos: .background,
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 9 —Å–µ–∫—É–Ω–¥ - sourceImages: photos, filter: .noir, qos: .default.

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ —É–¥–≤–æ–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç–∏–Ω–æ–∫: –Ω–∞–¥–æ –∑–∞–º–µ–Ω–∏—Ç—å(–ø–µ—Ä–µ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥) –≤ 4 –º–µ—Å—Ç–∞—Ö - –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –º–µ—Ç–æ–¥–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞, –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏ –º–µ—Ç–æ–¥–∞ –∏ –≤ –º–µ—Ç–æ–¥–∞—Ö  cellForRowAt –∏ numberOfItemsInSection
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 17 —Å–µ–∫—É–Ω–¥ - sourceImages: photos2, filter: .noir, qos: .userInteractive
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 17 —Å–µ–∫—É–Ω–¥ - sourceImages: photos2, filter: .noir, qos: .userInitiated
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 18 —Å–µ–∫—É–Ω–¥ - sourceImages: photos2, filter: .noir, qos: .utility
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 52 —Å–µ–∫—É–Ω–¥ - sourceImages: photos2, filter: .noir, qos: .background (—Å–∫—Ä–æ–ª–ª–∏–ª–∞ )
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 46 —Å–µ–∫—É–Ω–¥ - sourceImages: photos2, filter: .noir, qos: .background ( –ù–ï –°–ö–†–û–õ–õ–ò–õ–ê)
//–í—Ä–µ–º—è –Ω–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ 17 —Å–µ–∫—É–Ω–¥ - sourceImages: photos2, filter: .noir, qos:  .default
